S : Single Responsibility
o: Open / Code
L: Liskov Substitutable 
I: Interface segregation
D: Dependency Inversion


- Single Responsibility: Only one region for the class to change (focus/specific  functionality).
--  eg : controller class is for the rest endpoint and service class is for the business logic and dao class is for database layer. we should not implement business logic or validation logic directly in controller class.

- Open/Close: open for extention and close for modification.
--  eg : identitly the common functionality and make one abstract class and the child class should be modified instead of base class.

- Liskov SSubstitutable: we soblid be subsituting the base class object with the child class object & this should not alter the behaviour of program: 
-- eg : chaning the behaviour of base class in very dangerous.

- Intgerface Segregation: Client should not be force to depend upon the interface which they do not use.(break interface into interface with small methods and have high cohesive )
